name: Deploy

#1
on: 
  workflow_dispatch:

#2
env:
  REGISTRY: "registry.digitalocean.com/miutn"
  IMAGE_NAME: "ordena-voz-api"

#3
jobs:
  tags:
    name: Create tag
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@master

      - name: Extract version
        id: extract_version
        uses: Saionaro/extract-package-version@v1.2.1

      - name: Print version
        run: echo ${{ steps.extract_version.outputs.version }}

      - name: Create tag
        uses: rickstaa/action-create-tag@v1
        id: "tag_create"
        with:
          tag: ${{ steps.extract_version.outputs.version }}
          tag_exists_error: true
          message: ${{ format('release v{0}', steps.extract_version.outputs.version) }}

  build_and_push:
    runs-on: ubuntu-latest
    needs: tags
    steps:
      - name: Checkout the repo 
        uses: actions/checkout@v2

      - name: Extract version
        id: extract_version
        uses: Saionaro/extract-package-version@v1.2.1

      - name: Build container image
        run: docker build -t $(echo $REGISTRY)/$(echo $IMAGE_NAME):$(echo ${{ steps.extract_version.outputs.version }}) .

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
    
      - name: Log in to DigitalOcean Container Registry with short-lived credentials
        run: doctl registry login --expiry-seconds 600
      
      - name: Remove all old images
        run: if [ ! -z "$(doctl registry repository list | grep "$(echo $IMAGE_NAME)")" ]; then doctl registry repository delete-manifest $(echo $IMAGE_NAME) $(doctl registry repository list-tags $(echo $IMAGE_NAME) | grep -o "sha.*") --force; else echo "No repository"; fi

      - name: Push image to DigitalOcean Container Registry
        run: docker push $(echo $REGISTRY)/$(echo $IMAGE_NAME):$(echo ${{ steps.extract_version.outputs.version }})
        
  deploy:
    runs-on: ubuntu-latest
    needs: build_and_push
    
    steps:
      - name: Checkout code
        uses: actions/checkout@master
        
      - name: Extract version
        id: extract_version
        uses: Saionaro/extract-package-version@v1.2.1

      - name: Deploy to Digital Ocean droplet via SSH action
        uses: appleboy/ssh-action@v0.1.3
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSHKEY }}
          passphrase: ${{ secrets.PASSPHRASE }}
          envs: IMAGE_NAME,REGISTRY,{{ secrets.DIGITALOCEAN_ACCESS_TOKEN }},GITHUB_SHA
          script: |
            # Login to registry
            docker login -u ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }} -p ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }} registry.digitalocean.com
            # Stop running container
            docker stop $(echo $IMAGE_NAME) || true
            # Remove old container
            docker rm $(echo $IMAGE_NAME) || true
            # Run a new container from a new image
            version=$(echo ${{ steps.extract_version.outputs.version }}) sh $(echo ${{ secrets.SH_PATH }})

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
    
      - name: Log in to DigitalOcean Container Registry with short-lived credentials
        run: doctl registry login --expiry-seconds 600
      
      - name: Remove all old images
        run: if [ ! -z "$(doctl registry repository list | grep "$(echo $IMAGE_NAME)")" ]; then doctl registry repository delete-manifest $(echo $IMAGE_NAME) $(doctl registry repository list-tags $(echo $IMAGE_NAME) | grep -o "sha.*") --force; else echo "No repository"; fi