export enum ErrorType {
  CATEGORY_LINKED_TO_PRODUCTS = 'CATEGORY_LINKED_TO_PRODUCTS',
  RESOURCE_ALREADY_EXISTS = 'RESOURCE_ALREADY_EXISTS',
  RESOURCE_NOT_FOUND = 'RESOURCE_NOT_FOUND',
  RESOURCES_NOT_FOUND = 'RESOURCES_NOT_FOUND',
  INCOMPATIBLE_CURRENCY = 'INCOMPATIBLE_CURRENCY',
  INGREDIENT_LINKED_TO_PRODUCTS = 'INGREDIENT_LINKED_TO_PRODUCTS',
  INVALID_ENUM_VALUE = 'INVALID_ENUM_VALUE',
  INVALID_STATE = 'INVALID_STATE',
  FORM_INVALID_FIELD = 'FORM_INVALID_FIELD',
  USER_AND_TOKEN_MISMATCH = 'USER_AND_TOKEN_MISMATCH',
  UNKNOWN = 'UNKNOWN',
  ACCESS_DENIED = 'ACCESS_DENIED',
  BAD_REQUEST = 'BAD_REQUEST',
  UNAUTHORIZED = 'UNAUTHORIZED',
  INSUFICIENT_STOCK = 'INSUFICIENT_STOCK',
  CATEGORY_IS_NOT_CHILD = 'CATEGORY_IS_NOT_CHILD',
  TRANSFER_RECEIPT_REQUIRED = 'TRANSFER_RECEIPT_REQUIRED',
  PASSWORD_TO_WEAK = 'PASSWORD_TO_WEAK',
  INSUFICIENT_PERMISSIONS = 'INSUFICIENT_PERMISSIONS',
  CANT_DELETE_YOURSELF = 'CANT_DELETE_YOURSELF',
  PREVIOUS_PASSWORD_IS_INVALID = 'PREVIOUS_PASSWORD_IS_INVALID',
  INVALID_MOVEMENT_AMOUNT = 'INVALID_MOVEMENT_AMOUNT',
  MERCADO_PAGO_ACCOUNT_REQUIRED = 'MERCADO_PAGO_ACCOUNT_REQUIRED',
  MERCADO_PAGO_ACCOUNT_ALREADY_ASSIGNED = 'MERCADO_PAGO_ACCOUNT_ALREADY_ASSIGNED',
  MERCADO_PAGO_ACCOUNT_CANT_BE_DELETED = 'MERCADO_PAGO_ACCOUNT_CANT_BE_DELETED',
  MERCADO_PAGO_ACCOUNT_CANT_BE_UNASSIGNED = 'MERCADO_PAGO_ACCOUNT_CANT_BE_UNASSIGNED',
  MERCADO_PAGO_CASHIER_NOT_FOUND = 'MERCADO_PAGO_CASHIER_NOT_FOUND',
  MERCADO_PAGO_DEVICE_FORBIDDEN = 'MERCADO_PAGO_DEVICE_FORBIDDEN',
  MERCADO_PAGO_DYNAMIC_CASHIER_NOT_FOUND = 'MERCADO_PAGO_DYNAMIC_CASHIER_NOT_FOUND',
  MERCADO_PAGO_INTENT_NOT_FOUND = 'MERCADO_PAGO_INTENT_NOT_FOUND',
  MERCADO_PAGO_INTENT_ALREADY_PROCESSED = 'MERCADO_PAGO_INTENT_ALREADY_PROCESSED',
  MERCADO_PAGO_INTENT_ALREADY_QUEUED = 'MERCADO_PAGO_INTENT_ALREADY_QUEUED',
  MERCADO_PAGO_INVALID_AMOUNT = 'MERCADO_PAGO_INVALID_AMOUNT',
  MERCADO_PAGO_STORE_NOT_FOUND = 'MERCADO_PAGO_STORE_NOT_FOUND',
  MERCADO_PAGO_FORBIDDEN = 'MERCADO_PAGO_FORBIDDEN',
  MERCADO_PAGO_CONFLICT = 'MERCADO_PAGO_CONFLICT',
  CASH_SALE_CANT_BE_DELIVERED = 'CASH_SALE_CANT_BE_DELIVERED',
  STORE_LINKED_TO_CASHIERS = 'STORE_LINKED_TO_CASHIERS',
}

export type HandledErrorParams = {
  type: ErrorType;
  params: Record<string, any>;
};

export enum Resource {
  ACCOUNT = 'ACCOUNT',
  CASHIER = 'CASHIER',
  CATEGORY = 'CATEGORY',
  INGREDIENT = 'INGREDIENT',
  MOVEMENT = 'MOVEMENT',
  MOVEMENT_CATEGORY = 'MOVEMENT_CATEGORY',
  ORDER = 'ORDER',
  PRODUCT = 'PRODUCT',
  PROVIDER = 'PROVIDER',
  RECEIVING = 'RECEIVING',
  SALE = 'SALE',
  STORE = 'STORE',
  USER = 'USER'
}

export class HandledError extends Error {
  private error: HandledErrorParams;

  constructor(error: HandledErrorParams) {
    super(`[ERROR] ${error.type}: ${JSON.stringify(error.params)}`);
    this.error = error;
    this.name = 'HandledError';
  }

  public getMessage(): HandledErrorParams {
    return this.error;
  }
}
